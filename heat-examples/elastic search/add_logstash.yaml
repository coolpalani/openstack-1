heat_template_version: 2016-04-08
description: |
  This heat template is used to provision basic cloud images
  with desired configuration.

#                 #
#   Parameters    #
#                 #

parameters:
  esearch_cluster_name:
    type: string
  hostname:
    type: string
  ES_DATA_VIP:
    type: string
  java_heap_space:
    type: string
    description: Xmx and Xms size of elastic (i.e. 768m)
  logstash.tar.gz_file_nfs_mount_point:
    type: string
    description: nfsserver:/path/to/targzfile/
  domain:
    type: string
  ns1:
    type: string
  ns2:
    type: string
  ntp1:
    type: string
  external_network_name:
    type: string
  internal_network_name:
    type: string
  internal_network_subnet_name:
    type: string
  security_group:
    type: string
  key_pair_name:
    type: string
  flavor_name:
    type: string
  image_name:
    type: string

resources:
#                 
#   Floating IP allocation for ogstash
#                 

  floating_ip_logstash1:
    type: OS::Nova::FloatingIP
    properties:
      pool: { get_param: external_network_name }                        

#                 
#   Linking floating ips with servers
#                 

  association_logstash1:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip_logstash1 }
      server_id: { get_resource: logstash1 }            

#                 
#   Internal Ip allocations; 

#   Logstash getting ip from openstack dhcp
#                 

  instance_port_logstash1:
    type: OS::Neutron::Port
    properties:
      network: { get_param: internal_network_name } 
      security_groups:
        - { get_param: security_group }
      fixed_ips:
        - subnet_id: { get_param: internal_network_subnet_name }                          

#                 
#   Server Provisions
#                 


  logstash1:
    type: OS::Nova::Server
    properties:
      metadata:
        type: logstash
      name: 
        str_replace:
          template: $PART_CL-$LS_HOST
          params:
            $PART_CL: {get_param: esearch_cluster_name }
            $LS_HOST: {get_param: hostname }
      flavor: { get_param: flavor_name }
      image: { get_param: image_name }
      networks:
        - port: { get_resource: instance_port_logstash1 }
      key_name: {get_param: key_pair_name }
      user_data_format: SOFTWARE_CONFIG
      user_data:
       get_resource: cloud_init_userdata_logstash
       
         
#                 
#   Instances Customization for ES, Kibana and Logstash via Cloud-Config
#                 

  cloud_init_userdata_logstash:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: cloud_config_logstash}
       
  cloud_config_logstash:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
       bootcmd:
        - setenforce 0
       write_files:
        - path: /etc/chrony.conf
          permissions: "0644"
          content:
             str_replace:
              params:
               __osntp1__: { get_param: ntp1 }
              template: |
                server __osntp1__ iburst
                stratumweight 0
                driftfile /var/lib/chrony/drift
                rtcsync
                makestep 10 3
                bindcmdaddress 127.0.0.1
                bindcmdaddress ::1
                keyfile /etc/chrony.keys
                commandkey 1
                generatecommandkey
                noclientlog
                logchange 0.5
        - path: /etc/sysctl.d/elastic.conf
          permissions: "0644"
          content: |
                vm.max_map_count=262144
        - path: /etc/security/limits.d/elastic.conf
          content: |
                elastic         soft    nofile          65536
                elastic         hard    nofile          65536
                elastic soft memlock unlimited
                elastic hard memlock unlimited
        - path: /tmp/cloud_init.sh
          permissions: "0755"
          content:
             str_replace:
              params:
               __heap__: {get_param: java_heap_space }
               __osns1__: { get_param: ns1 }
               __osns2__: { get_param: ns2 }
               __osdomain__: { get_param: domain }
               __esdataip__: {get_param: ES_DATA_VIP }
               __mountpoint__: {get_param: logstash.tar.gz_file_nfs_mount_point }
              template: |
                #!/bin/bash
                IPADDR="$(nmcli c s 'System eth0'|grep 'IP4.ADDRESS'|awk '{print $2}'|cut -d/ -f1)"
                LS_PATH="/home/app/logstash/logstash"
                JAVA_PATH="/home/app/java/jdk1.8/jre"
                MOUNT_POINT="__mountpoint__"
                timedatectl set-timezone Europe/Istanbul
                nmcli con mod 'System eth0' ipv4.ignore-auto-dns yes
                nmcli con mod 'System eth0' ipv4.dns-search __osdomain__
                nmcli con mod 'System eth0' +ipv4.dns __osns1__
                nmcli con mod 'System eth0' +ipv4.dns __osns2__
                nmcli con up 'System eth0'
                hostnamectl set-hostname $(hostname -s).__osdomain__
                systemctl restart chronyd
                echo "$IPADDR $(hostname) $(hostname -s)" >> /etc/hosts
                mkdir /home/app; useradd -u 1112 -md /home/app/elastic elastic
                sysctl -p /etc/sysctl.d/elastic.conf
                mount $MOUNT_POINT /mnt
                tar zxf /mnt/logstash.tar.gz -C /
                sed -i 's/securerandom.source=file:\/dev\/random/securerandom.source=file:\/dev\/urandom/g' $JAVA_PATH/lib/security/java.security
                sed -i '20a\# Added by cloud-init' $LS_PATH/bin/logstash
                sed -i '21a\JAVA_HOME='$JAVA_PATH $LS_PATH/bin/logstash
                sed -i 's/-Xms256m/-Xms__heap__/g' $LS_PATH/config/jvm.options
                sed -i 's/-Xmx1g/-Xmx__heap__/g' $LS_PATH/config/jvm.options
                cp /mnt/logstash-pipeline.conf $LS_PATH/logstash-pipeline.conf
                sed -i 's/ELASTIC_IP_HERE/__esdataip__:9200/g' $LS_PATH/logstash-pipeline.conf
                chown elastic:elastic -R /home/app
                umount /mnt                
                sudo -H -u elastic bash -c "nohup $LS_PATH/bin/logstash -f $LS_PATH/logstash-pipeline.conf > $LS_PATH/logstash.out 2>&1 &"
       runcmd:
        - [ sh, -c, "/tmp/cloud_init.sh" ]
       final_message: "cloud-init has been run, after $UPTIME seconds"
       
